name: Run phpunit
on: [pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['8.3']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Start database services
        run: docker compose up -d
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, dom, fileinfo, mysql, mongodb
          coverage: xdebug #optional
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader
      - name: Run Testsuite
        run: |
          while ! docker compose exec -T mysql mysqladmin --user=root --host mysql ping --silent ; do
              echo "Waiting for database connection..."
              sleep 2
          done
          vendor/bin/phinx migrate -e mysql
          vendor/bin/phinx seed:run -e mysql
          vendor/bin/phinx migrate -e sqlite
          vendor/bin/phinx seed:run -e sqlite
          vendor/bin/phpunit
